-- Create all necessary tables
-- Make connections

-- Note: Decimal values for currency and use of medium text

CREATE TABLE IF NOT EXISTS `Users` (
  `id` INTEGER NOT NULL AUTO_INCREMENT,
  `password` MEDIUMTEXT NULL DEFAULT NULL,
  `total_savings` DECIMAL(12,2) NULL DEFAULT NULL,
  `savings_goal` INTEGER NULL DEFAULT NULL,
  `monthly_limit` DECIMAL(12,2) NULL DEFAULT NULL,
  `full_name` MEDIUMTEXT NULL DEFAULT NULL,
  `email` MEDIUMTEXT NULL DEFAULT NULL,
  `auth_credential` MEDIUMTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `Expenses` (
  `id` INTEGER NOT NULL AUTO_INCREMENT,
  `amount` DECIMAL(12,2) NULL DEFAULT NULL,
  `category` MEDIUMTEXT NULL DEFAULT NULL,
  `notes` MEDIUMTEXT NULL DEFAULT NULL,
  `spent_date` MEDIUMTEXT NULL DEFAULT NULL,
  `location` MEDIUMTEXT NULL DEFAULT NULL,
  `geocode` MEDIUMTEXT NULL DEFAULT NULL,
  `name` MEDIUMTEXT NULL DEFAULT NULL,
  `recurring_id` INTEGER NULL DEFAULT NULL,
  `user_id` INTEGER NULL DEFAULT NULL,
  `location_lat` MEDIUMTEXT NULL DEFAULT NULL,
  `location_long` MEDIUMTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `Incomes` (
  `id` INTEGER NOT NULL AUTO_INCREMENT,
  `amount` DECIMAL(12,2) NULL DEFAULT NULL,
  `category` MEDIUMTEXT NULL DEFAULT NULL,
  `notes` MEDIUMTEXT NULL DEFAULT NULL,
  `income_date` MEDIUMTEXT NULL DEFAULT NULL,
  `location` MEDIUMTEXT NULL DEFAULT NULL,
  `geocode` MEDIUMTEXT NULL DEFAULT NULL,
  `name` MEDIUMTEXT NULL DEFAULT NULL,
  `user_id` INTEGER NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `Recurring_Expenses` (
  `id` INTEGER NOT NULL AUTO_INCREMENT,
  `amount` DECIMAL(12,2) NULL DEFAULT NULL,
  `name` MEDIUMTEXT NULL DEFAULT NULL,
  `due_date` MEDIUMTEXT NULL DEFAULT NULL,
  `notes` MEDIUMTEXT NULL DEFAULT NULL,
  `user_id` INTEGER NULL DEFAULT NULL,
  `category` MEDIUMTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `Goals` (
  `id` INTEGER NOT NULL AUTO_INCREMENT,
  `amount` DECIMAL(12,2) NULL DEFAULT NULL,
  `name` MEDIUMTEXT NULL DEFAULT NULL,
  `saved_amount` DECIMAL NULL DEFAULT NULL,
  `target_date` MEDIUMTEXT NULL DEFAULT NULL,
  `notes` MEDIUMTEXT NULL DEFAULT NULL,
  `category` MEDIUMTEXT NULL DEFAULT NULL,
  `user_id` INTEGER NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `Saved_Stocks` (
  `id` INTEGER NOT NULL AUTO_INCREMENT,
  `symbol` MEDIUMTEXT NULL DEFAULT NULL,
  `user_id` INTEGER NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `Articles` (
  `id` INTEGER NOT NULL AUTO_INCREMENT,
  `url` MEDIUMTEXT NULL DEFAULT NULL,
  `title` MEDIUMTEXT NULL DEFAULT NULL,
  `description` MEDIUMTEXT NULL DEFAULT NULL,
  `icon_path` BLOB NULL DEFAULT NULL,
  `category` MEDIUMTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `Users_Articles` (
  `user_id` INTEGER NULL DEFAULT NULL,
  `article_id` INTEGER NULL DEFAULT NULL
);

CREATE TABLE IF NOT EXISTS `Rewards` (
  `id` INTEGER NOT NULL AUTO_INCREMENT,
  `name` MEDIUMTEXT NULL DEFAULT NULL,
  `award_date` DATETIME NULL DEFAULT NULL,
  `type` MEDIUMTEXT NULL DEFAULT NULL,
  `icon_path` MEDIUMTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
);

CREATE TABLE IF NOT EXISTS `Users_Rewards` (
  `user_id` INTEGER NULL DEFAULT NULL,
  `reward_id` INTEGER NULL DEFAULT NULL
);

ALTER TABLE `Expenses` ADD FOREIGN KEY (recurring_id) REFERENCES `Recurring_Expenses` (`id`);
ALTER TABLE `Expenses` ADD FOREIGN KEY (user_id) REFERENCES `Users` (`id`);
ALTER TABLE `Incomes` ADD FOREIGN KEY (user_id) REFERENCES `Users` (`id`);
ALTER TABLE `Recurring_Expenses` ADD FOREIGN KEY (user_id) REFERENCES `Users` (`id`);
ALTER TABLE `Goals` ADD FOREIGN KEY (user_id) REFERENCES `Users` (`id`);
ALTER TABLE `Saved_Stocks` ADD FOREIGN KEY (user_id) REFERENCES `Users` (`id`);
ALTER TABLE `Users_Articles` ADD FOREIGN KEY (user_id) REFERENCES `Users` (`id`);
ALTER TABLE `Users_Articles` ADD FOREIGN KEY (article_id) REFERENCES `Articles` (`id`);
ALTER TABLE `Users_Rewards` ADD FOREIGN KEY (user_id) REFERENCES `Users` (`id`);
ALTER TABLE `Users_Rewards` ADD FOREIGN KEY (reward_id) REFERENCES `Rewards` (`id`);
